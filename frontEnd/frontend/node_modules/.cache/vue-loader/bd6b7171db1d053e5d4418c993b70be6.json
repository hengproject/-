{"remainingRequest":"C:\\DATA\\projects\\数据库实习\\frontEnd\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\DATA\\projects\\数据库实习\\frontEnd\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\DATA\\projects\\数据库实习\\frontEnd\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\DATA\\projects\\数据库实习\\frontEnd\\frontend\\src\\components\\normalUser\\CatCard.vue?vue&type=template&id=530761b9&scoped=true&","dependencies":[{"path":"C:\\DATA\\projects\\数据库实习\\frontEnd\\frontend\\src\\components\\normalUser\\CatCard.vue","mtime":1633239546383},{"path":"C:\\DATA\\projects\\数据库实习\\frontEnd\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630488426001},{"path":"C:\\DATA\\projects\\数据库实习\\frontEnd\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1630488427562},{"path":"C:\\DATA\\projects\\数据库实习\\frontEnd\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630488426001},{"path":"C:\\DATA\\projects\\数据库实习\\frontEnd\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1630488426239}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}